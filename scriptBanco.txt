-- Criação da tabela Empresa
CREATE TABLE Empresa (
    id SERIAL PRIMARY KEY,
    nomeFicticio VARCHAR(255) NOT NULL,
    telefone VARCHAR(20),
    CNPJ VARCHAR(14) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE,
    id_endereco INTEGER REFERENCES Endereco(id) ON DELETE CASCADE
);

-- Criação da tabela Funcionario
CREATE TABLE Funcionario (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    Sobrenome VARCHAR(255) NOT NULL,
    CPF VARCHAR(11) UNIQUE NOT NULL,
    id_endereco INTEGER REFERENCES Endereco(id) ON DELETE CASCADE,
    telefone VARCHAR(20),
    login VARCHAR(255) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    admin BOOLEAN,
    email VARCHAR(255) UNIQUE NOT NULL
);

-- Criação da tabela Cliente
CREATE TABLE Cliente (
    id SERIAL PRIMARY KEY,
    id_endereco INTEGER REFERENCES Endereco(id) ON DELETE CASCADE,
    nome VARCHAR(255) NOT NULL,
    Sobrenome VARCHAR(255) NOT NULL,
    telefone VARCHAR(20),
    cpf VARCHAR(11) UNIQUE NOT NULL,
    login VARCHAR(255) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);

-- Criação da tabela Endereco
CREATE TABLE Endereco (
    id SERIAL PRIMARY KEY,
    cep INTEGER NOT NULL,
    logradouro VARCHAR(255),
    numero INTEGER,
    complemento VARCHAR(255),
    bairro VARCHAR(255),
    cidade VARCHAR(255),
    estado VARCHAR(255)
);

-- Criação da tabela OrdemServico
CREATE TABLE OrdemServico (
    id SERIAL PRIMARY KEY,
    id_funcionario INTEGER REFERENCES Funcionario(id) ON DELETE CASCADE,
    id_cliente INTEGER REFERENCES Cliente(id) ON DELETE CASCADE,
    id_empresa INTEGER REFERENCES Empresa(id) ON DELETE CASCADE,
    numOS INTEGER UNIQUE,
    status VARCHAR(255) CHECK (status IN ('aguardando', 'iniciado', 'finalizado')),
    observacao VARCHAR(255),
    entregar BOOLEAN,
    servicosOrdem JSONB,
    dataEmissao DATE,
    previsaoTermino DATE,
    ValorTotal FLOAT
);

-- Criação da tabela Servico
CREATE TABLE Servico (
    id SERIAL PRIMARY KEY,
    descricao VARCHAR(255) UNIQUE NOT NULL,
    preco FLOAT
);







*--

    Como usar o jsonb:
    INSER:
        INSERT INTO OrdemServico (id_funcionario, id_cliente, id_empresa, numOS, status, servicosOrdem, dataEmissao, previsaoTermino, ValorTotal)
        VALUES (1, 2, 3, 123, 'aguardando', '[{"id_servico": 1, "descricao": "Serviço A", "preco": 50.0}, {"id_servico": 2, "descricao": "Serviço B", "preco": 75.0}]'::jsonb, '2023-11-18', '2023-11-25', 125.0);

    SELECT:
        SELECT * FROM OrdemServico
        WHERE servicosOrdem @> '[{"id_servico": 1}]'::jsonb;

    UPDATE:
        UPDATE OrdemServico
        SET servicosOrdem = servicosOrdem || '[{"id_servico": 3, "descricao": "Serviço C", "preco": 100.0}]'::jsonb
        WHERE id = 1;

--*